
Scan Types:

- TCP Connect() Scan [-sT]
  This is the most basic form of scanning that uses the UNIX connect command to attempt to connect to a port. If the connection succeeds, the port is open, if it fails, the system is offline, the port is closed, or an error occurred. This type of scan is easy to detect and will likely be logged in the target system.

- TCP Stealth Scan [-sS]
  SYN or Stealth scanning works by sending a SYN packet and looking at the response. If SYN/ACK is sent back, the port is open and the remote end is trying to open a TCP connection. The scanner then sends an RST to tear down the connection before it can be established fully; often preventing the connection attempt appearing in application logs. If the port is closed, an RST will be sent. If it is filtered, the SYN packet will have been dropped and no response will be sent. In this way, Nmap can detect three port states - open, closed and filtered. Modern firewalls and Intrusion Detection Systems can typically detect SYN scans, but in combination with other features of Nmap, it is possible to create a virtually undetectable SYN scan by altering timing and other options.

- FIN, XMAS, and NULL Scan [-sF, -sX, -sN]
  The FIN scan sends a packet with only the FIN flag set, the Xmas Tree scan sets the FIN, URG and PUSH flags and the Null scan sends a packet with no flags switched on. With the multitude of modern firewalls and IDS’ now looking out for SYN scans, these three scan types may be useful to varying degrees. Each scan type refers to the flags set in the TCP header. The idea behind these type of scans is that a closed port should respond with an RST upon receiving packets, whereas an open port should just drop them (it’s listening for packets with SYN set). This way, you never make even part of a connection, and never send a SYN packet; which is what most IDS’ look out for.
